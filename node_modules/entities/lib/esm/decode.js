import htmlDecodeTree from"./generated/decode-data-html.js";import xmlDecodeTree from"./generated/decode-data-xml.js";import decodeCodePoint from"./decode_codepoint.js";export{htmlDecodeTree,xmlDecodeTree,decodeCodePoint};export{replaceCodePoint,fromCodePoint}from"./decode_codepoint.js";var CharCodes;!function(e){e[e.NUM=35]="NUM",e[e.SEMI=59]="SEMI",e[e.ZERO=48]="ZERO",e[e.NINE=57]="NINE",e[e.LOWER_A=97]="LOWER_A",e[e.LOWER_F=102]="LOWER_F",e[e.LOWER_X=120]="LOWER_X",e[e.To_LOWER_BIT=32]="To_LOWER_BIT"}(CharCodes||(CharCodes={}));export var BinTrieFlags;function getDecoder(e){return function(o,r){let t="",d=0,n=0;for(;(n=o.indexOf("&",n))>=0;){if(t+=o.slice(d,n),d=n,n+=1,o.charCodeAt(n)===CharCodes.NUM){let e=n+1,i=10,c=o.charCodeAt(e);(c|CharCodes.To_LOWER_BIT)===CharCodes.LOWER_X&&(i=16,n+=1,e+=1);do{c=o.charCodeAt(++n)}while(c>=CharCodes.ZERO&&c<=CharCodes.NINE||16===i&&(c|CharCodes.To_LOWER_BIT)>=CharCodes.LOWER_A&&(c|CharCodes.To_LOWER_BIT)<=CharCodes.LOWER_F);if(e!==n){const c=o.substring(e,n),C=parseInt(c,i);if(o.charCodeAt(n)===CharCodes.SEMI)n+=1;else if(r)continue;t+=decodeCodePoint(C),d=n}continue}let i=0,c=1,C=0,a=e[C];for(;n<o.length&&(C=determineBranch(e,a,C+1,o.charCodeAt(n)),!(C<0));n++,c++){a=e[C];const t=a&BinTrieFlags.VALUE_LENGTH;if(t){r&&o.charCodeAt(n)!==CharCodes.SEMI||(i=C,c=0);const e=(t>>14)-1;if(0===e)break;C+=e}}if(0!==i){const o=(e[i]&BinTrieFlags.VALUE_LENGTH)>>14;t+=1===o?String.fromCharCode(e[i]&~BinTrieFlags.VALUE_LENGTH):2===o?String.fromCharCode(e[i+1]):String.fromCharCode(e[i+1],e[i+2]),d=n-c+1}}return t+o.slice(d)}}!function(e){e[e.VALUE_LENGTH=49152]="VALUE_LENGTH",e[e.BRANCH_LENGTH=16256]="BRANCH_LENGTH",e[e.JUMP_TABLE=127]="JUMP_TABLE"}(BinTrieFlags||(BinTrieFlags={}));export function determineBranch(e,o,r,t){const d=(o&BinTrieFlags.BRANCH_LENGTH)>>7,n=o&BinTrieFlags.JUMP_TABLE;if(0===d)return 0!==n&&t===n?r:-1;if(n){const o=t-n;return o<0||o>=d?-1:e[r+o]-1}let i=r,c=i+d-1;for(;i<=c;){const o=i+c>>>1,r=e[o];if(r<t)i=o+1;else{if(!(r>t))return e[o+d];c=o-1}}return-1}const htmlDecoder=getDecoder(htmlDecodeTree),xmlDecoder=getDecoder(xmlDecodeTree);export function decodeHTML(e){return htmlDecoder(e,!1)}export function decodeHTMLStrict(e){return htmlDecoder(e,!0)}export function decodeXML(e){return xmlDecoder(e,!0)}
