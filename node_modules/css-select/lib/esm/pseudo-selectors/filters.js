import getNCheck from"nth-check";import boolbase from"boolbase";function getChildFunc(e,t){return n=>{const o=t.getParent(n);return null!=o&&t.isTag(o)&&e(n)}}export const filters={contains:(e,t,{adapter:n})=>function(o){return e(o)&&n.getText(o).includes(t)},icontains(e,t,{adapter:n}){const o=t.toLowerCase();return function(t){return e(t)&&n.getText(t).toLowerCase().includes(o)}},"nth-child"(e,t,{adapter:n,equals:o}){const s=getNCheck(t);return s===boolbase.falseFunc?boolbase.falseFunc:s===boolbase.trueFunc?getChildFunc(e,n):function(t){const a=n.getSiblings(t);let r=0;for(let e=0;e<a.length&&!o(t,a[e]);e++)n.isTag(a[e])&&r++;return s(r)&&e(t)}},"nth-last-child"(e,t,{adapter:n,equals:o}){const s=getNCheck(t);return s===boolbase.falseFunc?boolbase.falseFunc:s===boolbase.trueFunc?getChildFunc(e,n):function(t){const a=n.getSiblings(t);let r=0;for(let e=a.length-1;e>=0&&!o(t,a[e]);e--)n.isTag(a[e])&&r++;return s(r)&&e(t)}},"nth-of-type"(e,t,{adapter:n,equals:o}){const s=getNCheck(t);return s===boolbase.falseFunc?boolbase.falseFunc:s===boolbase.trueFunc?getChildFunc(e,n):function(t){const a=n.getSiblings(t);let r=0;for(let e=0;e<a.length;e++){const s=a[e];if(o(t,s))break;n.isTag(s)&&n.getName(s)===n.getName(t)&&r++}return s(r)&&e(t)}},"nth-last-of-type"(e,t,{adapter:n,equals:o}){const s=getNCheck(t);return s===boolbase.falseFunc?boolbase.falseFunc:s===boolbase.trueFunc?getChildFunc(e,n):function(t){const a=n.getSiblings(t);let r=0;for(let e=a.length-1;e>=0;e--){const s=a[e];if(o(t,s))break;n.isTag(s)&&n.getName(s)===n.getName(t)&&r++}return s(r)&&e(t)}},root:(e,t,{adapter:n})=>t=>{const o=n.getParent(t);return(null==o||!n.isTag(o))&&e(t)},scope(e,t,n,o){const{equals:s}=n;return o&&0!==o.length?1===o.length?t=>s(o[0],t)&&e(t):t=>o.includes(t)&&e(t):filters.root(e,t,n)},hover:dynamicStatePseudo("isHovered"),visited:dynamicStatePseudo("isVisited"),active:dynamicStatePseudo("isActive")};function dynamicStatePseudo(e){return function(t,n,{adapter:o}){const s=o[e];return"function"!=typeof s?boolbase.falseFunc:function(e){return s(e)&&t(e)}}}
