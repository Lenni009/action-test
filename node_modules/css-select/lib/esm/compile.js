import{parse,SelectorType}from"css-what";import boolbase from"boolbase";import sortRules,{isTraversal}from"./sort.js";import{compileGeneralSelector}from"./general.js";import{ensureIsTag,PLACEHOLDER_ELEMENT}from"./pseudo-selectors/subselects.js";export function compile(e,o,t){const r=compileUnsafe(e,o,t);return ensureIsTag(r,o.adapter)}export function compileUnsafe(e,o,t){return compileToken("string"==typeof e?parse(e):e,o,t)}function includesScopePseudo(e){return e.type===SelectorType.Pseudo&&("scope"===e.name||Array.isArray(e.data)&&e.data.some((e=>e.some(includesScopePseudo))))}const DESCENDANT_TOKEN={type:SelectorType.Descendant},FLEXIBLE_DESCENDANT_TOKEN={type:"_flexibleDescendant"},SCOPE_TOKEN={type:SelectorType.Pseudo,name:"scope",data:null};function absolutize(e,{adapter:o},t){const r=!!(null==t?void 0:t.every((e=>{const t=o.isTag(e)&&o.getParent(e);return e===PLACEHOLDER_ELEMENT||t&&o.isTag(t)})));for(const o of e){if(o.length>0&&isTraversal(o[0])&&o[0].type!==SelectorType.Descendant);else{if(!r||o.some(includesScopePseudo))continue;o.unshift(DESCENDANT_TOKEN)}o.unshift(SCOPE_TOKEN)}}export function compileToken(e,o,t){var r;e.forEach(sortRules),t=null!==(r=o.context)&&void 0!==r?r:t;const s=Array.isArray(t),n=t&&(Array.isArray(t)?t:[t]);if(!1!==o.relativeSelector)absolutize(e,o,n);else if(e.some((e=>e.length>0&&isTraversal(e[0]))))throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled");let l=!1;const c=e.map((e=>{if(e.length>=2){const[o,t]=e;o.type!==SelectorType.Pseudo||"scope"!==o.name||(s&&t.type===SelectorType.Descendant?e[1]=FLEXIBLE_DESCENDANT_TOKEN:t.type!==SelectorType.Adjacent&&t.type!==SelectorType.Sibling||(l=!0))}return compileRules(e,o,n)})).reduce(reduceRules,boolbase.falseFunc);return c.shouldTestNextSiblings=l,c}function compileRules(e,o,t){var r;return e.reduce(((e,r)=>e===boolbase.falseFunc?boolbase.falseFunc:compileGeneralSelector(e,r,o,t,compileToken)),null!==(r=o.rootFunc)&&void 0!==r?r:boolbase.trueFunc)}function reduceRules(e,o){return o===boolbase.falseFunc||e===boolbase.trueFunc?e:e===boolbase.falseFunc||o===boolbase.trueFunc?o:function(t){return e(t)||o(t)}}
