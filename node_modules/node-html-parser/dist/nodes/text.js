"use strict";var __extends=this&&this.__extends||function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});var he_1=require("he"),node_1=__importDefault(require("./node")),type_1=__importDefault(require("./type")),TextNode=function(t){function e(e,r,n){var o=t.call(this,r,n)||this;return o.nodeType=type_1.default.TEXT_NODE,o._rawText=e,o}return __extends(e,t),e.prototype.clone=function(){return new e(this._rawText,null)},Object.defineProperty(e.prototype,"rawText",{get:function(){return this._rawText},set:function(t){this._rawText=t,this._trimmedRawText=void 0,this._trimmedText=void 0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"trimmedRawText",{get:function(){return void 0!==this._trimmedRawText||(this._trimmedRawText=trimText(this.rawText)),this._trimmedRawText},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"trimmedText",{get:function(){return void 0!==this._trimmedText||(this._trimmedText=trimText(this.text)),this._trimmedText},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"text",{get:function(){return(0,he_1.decode)(this.rawText)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isWhitespace",{get:function(){return/^(\s|&nbsp;)*$/.test(this.rawText)},enumerable:!1,configurable:!0}),e.prototype.toString=function(){return this.rawText},e}(node_1.default);function trimText(t){for(var e,r,n=0;n>=0&&n<t.length;)/\S/.test(t[n])&&(void 0===e?(e=n,n=t.length):(r=n,n=void 0)),void 0===e?n++:n--;void 0===e&&(e=0),void 0===r&&(r=t.length-1);var o=e>0&&/[^\S\r\n]/.test(t[e-1]),i=r<t.length-1&&/[^\S\r\n]/.test(t[r+1]);return(o?" ":"")+t.slice(e,r+1)+(i?" ":"")}exports.default=TextNode;
