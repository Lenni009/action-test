import{hasChildren}from"domhandler";export function removeSubsets(n){let t=n.length;for(;--t>=0;){const o=n[t];if(t>0&&n.lastIndexOf(o,t-1)>=0)n.splice(t,1);else for(let e=o.parent;e;e=e.parent)if(n.includes(e)){n.splice(t,1);break}}return n}export var DocumentPosition;!function(n){n[n.DISCONNECTED=1]="DISCONNECTED",n[n.PRECEDING=2]="PRECEDING",n[n.FOLLOWING=4]="FOLLOWING",n[n.CONTAINS=8]="CONTAINS",n[n.CONTAINED_BY=16]="CONTAINED_BY"}(DocumentPosition||(DocumentPosition={}));export function compareDocumentPosition(n,t){const o=[],e=[];if(n===t)return 0;let i=hasChildren(n)?n:n.parent;for(;i;)o.unshift(i),i=i.parent;for(i=hasChildren(t)?t:t.parent;i;)e.unshift(i),i=i.parent;const r=Math.min(o.length,e.length);let s=0;for(;s<r&&o[s]===e[s];)s++;if(0===s)return DocumentPosition.DISCONNECTED;const u=o[s-1],c=u.children,D=o[s],N=e[s];return c.indexOf(D)>c.indexOf(N)?u===t?DocumentPosition.FOLLOWING|DocumentPosition.CONTAINED_BY:DocumentPosition.FOLLOWING:u===n?DocumentPosition.PRECEDING|DocumentPosition.CONTAINS:DocumentPosition.PRECEDING}export function uniqueSort(n){return(n=n.filter(((n,t,o)=>!o.includes(n,t+1)))).sort(((n,t)=>{const o=compareDocumentPosition(n,t);return o&DocumentPosition.PRECEDING?-1:o&DocumentPosition.FOLLOWING?1:0})),n}
