import{isTag,isText}from"domhandler";import{filter,findOne}from"./querying.js";const Checks={tag_name:t=>"function"==typeof t?e=>isTag(e)&&t(e.name):"*"===t?isTag:e=>isTag(e)&&e.name===t,tag_type:t=>"function"==typeof t?e=>t(e.type):e=>e.type===t,tag_contains:t=>"function"==typeof t?e=>isText(e)&&t(e.data):e=>isText(e)&&e.data===t};function getAttribCheck(t,e){return"function"==typeof e?n=>isTag(n)&&e(n.attribs[t]):n=>isTag(n)&&n.attribs[t]===e}function combineFuncs(t,e){return n=>t(n)||e(n)}function compileTest(t){const e=Object.keys(t).map((e=>{const n=t[e];return Object.prototype.hasOwnProperty.call(Checks,e)?Checks[e](n):getAttribCheck(e,n)}));return 0===e.length?null:e.reduce(combineFuncs)}export function testElement(t,e){const n=compileTest(t);return!n||n(e)}export function getElements(t,e,n,r=1/0){const i=compileTest(t);return i?filter(i,e,n,r):[]}export function getElementById(t,e,n=!0){return Array.isArray(e)||(e=[e]),findOne(getAttribCheck("id",t),e,n)}export function getElementsByTagName(t,e,n=!0,r=1/0){return filter(Checks.tag_name(t),e,n,r)}export function getElementsByTagType(t,e,n=!0,r=1/0){return filter(Checks.tag_type(t),e,n,r)}
